#!/usr/bin/env bash

set -o nounset
set -o pipefail

function update_brew() {
    if command -v brew > /dev/null; then
        brew_update
        echo Homebrew was updated
    fi
}

function update_docker() {
    if command -v docker > /dev/null; then
        docker images --all | tail -n +2 | awk '{print $1":"$2}' | xargs -n1 docker pull
        echo Docker images were updated
    fi
}

function update_dotfiles() {
    cd "${HOME}"/.dotfiles
    git pull --all --prune --tags --force --rebase && git submodule update --init --recursive
    echo dotfiles were updated
    git_config > /dev/null
    echo git config was applied
}

function update_zsh() {
    if [ -n "${ZSH-}" ] && [ -f "${ZSH}"/tools/upgrade.sh ]; then
        env ZSH="${ZSH}" sh "${ZSH}"/tools/upgrade.sh
        echo Oh My Zsh was updated
    fi
}

UPDATE=()

if [ $# -eq 0 ]; then
    UPDATE+=(update_dotfiles)
elif [ "${1:-}" = "all" ]; then
    UPDATE=(update_dotfiles update_brew update_docker update_zsh)
else
    for type in "$@"; do
        case "${type}" in
            +brew)
                UPDATE+=(update_brew)
            ;;
            +docker)
                UPDATE+=(update_docker)
            ;;
            +dots)
                UPDATE+=(update_dotfiles)
            ;;
            +zsh)
                UPDATE+=(update_zsh)
            ;;
            *)
                echo unknown type $type
            ;;
        esac
    done
fi

for update in "${UPDATE[@]}"; do
    eval $update
done

case $(basename $SHELL) in
    bash)
        echo source "${HOME}"/.bash_profile
    ;;
    zsh)
        echo source "${HOME}"/.zshrc
    ;;
    *)
        echo unknown shell $SHELL
        exit 1
    ;;
esac

echo done
exit 0
