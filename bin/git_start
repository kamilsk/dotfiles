#!/usr/bin/env bash

set -o nounset
set -o pipefail

current="$(git current)"
default="$(git default)"

if [ "${current}" != "${default}" ]; then
    git checkout "${default}"
fi

case "${1}" in
    github)
        id=${2:-}
        if [ -z "${id}" ]; then
            git branch --list | cat
            read -p 'enter issue id: ' id
        fi
        issue="issue-${id}"
        brief="$(echo ${@:3} | sed 's/ /-/g' | awk '{print tolower($0)}')"
        if [ -z "${brief}" ]; then
            branches="$(git branch --list | grep "${issue}-" | awk '{print $1}')"
            if [ -z "${branches}" ]; then
                branch="${issue}"
                git pull --all --prune --tags --force --rebase 2>/dev/null || true
                git checkout -b "${branch}"
            elif [ $(echo ${branches} | wc -l) -gt 1 ]; then
                echo please refine the branch:
                for branch in $branches; do
                    echo - $branch
                done
            else
                branch="${branches}"
                git checkout "${branch}"
            fi
        else
            branches="$(git branch --list | grep "${issue}-${brief}" | awk '{print $1}')"
            if [ $(echo ${branches} | wc -l) -gt 1 ]; then
                echo please refine the branch:
                for branch in $branches; do
                    echo - $branch
                done
            elif [ -n "${branches}" ]; then
                branch="${branches}"
                git checkout "${branch}"
            else
                branch="${issue}-${brief}"
                git pull --all --prune --tags --force --rebase 2>/dev/null || true
                git checkout -b "${branch}"
            fi
        fi
    ;;
    jira)
        id=${2:-}
        if [ -z "${id}" ]; then
            git branch --list | cat
            read -p 'enter issue id: ' id
        fi
        issue="$(echo ${id} | awk '{print toupper($0)}')"
        brief="$(echo ${@:3} | sed 's/ /-/g' | awk '{print tolower($0)}')"
        if [ -z "${brief}" ]; then
            branches="$(git branch --list | grep "${issue}-" | awk '{print $1}')"
            if [ -z "${branches}" ]; then
                branch="${issue}"
                git pull --all --prune --tags --force --rebase 2>/dev/null || true
                git checkout -b "${branch}"
            elif [ $(echo ${branches} | wc -l) -gt 1 ]; then
                echo please refine the branch:
                for branch in $branches; do
                    echo - $branch
                done
            else
                branch="${branches}"
                git checkout "${branch}"
            fi
        else
            branches="$(git branch --list | grep "${issue}-${brief}" | awk '{print $1}')"
            if [ $(echo ${branches} | wc -l) -gt 1 ]; then
                echo please refine the branch:
                for branch in $branches; do
                    echo - $branch
                done
            elif [ -n "${branches}" ]; then
                branch="${branches}"
                git checkout "${branch}"
            else
                branch="${issue}-${brief}"
                git pull --all --prune --tags --force --rebase 2>/dev/null || true
                git checkout -b "${branch}"
            fi
        fi
    ;;
    *)
        (>&2 echo nothing to do)
        exit 1
    ;;
esac

echo done
exit 0
